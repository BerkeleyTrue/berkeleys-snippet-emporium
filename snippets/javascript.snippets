snippet jsx
	/** @jsx React.DOM */
snippet rcc
	var ${1:ClassName} = React.createClass({
		render: function() {
			return (
				${0:<div />}
			);
		}
	});
	module.exports = $1;
snippet rccc
	/** @jsx React.DOM */
	'use strict';
	var React = require('react');

	var ${1:ClassName} = React.createClass({
		render: function() {
			return (
				${0:<div />}
			);
		}
	});
	module.exports = $1;
snippet cdm
	componentDidMount: function() {
		${0}
	},
snippet cdu
	componentDidUpdate: function(prevProps, prevState) {
		${0}
	},
snippet cwm
	componentWillMount: function() {
		${0}
	},
snippet cwr
	componentWillReceiveProps: function(nextProps) {
		${0}
	},
snippet cwun
	componentWillUnmount: function() {
		${0}
	},
snippet cwu
	componentWillUpdate: function(nextProps, nextState) {
		${0}
	},
snippet cs
	var cx = React.addons.classSet;
snippet cx
	cx({
		${1}: ${0}
	});
snippet fup
	forceUpdate(${1:callback});
snippet gdp
	getDefaultProps: function() {
		return {
			${1}
		};
	},
snippet gis
	getInitialState: function() {
		return {
			${1}: ${0}
		};
	},
snippet ism
	isMounted()
snippet pt
	propTypes: {
		${1}: React.PropTypes.${0:string}
	},
snippet ren
	render: function() {
		return (
			${0:<div />}
		);
	}
snippet sst
	setState({
		${1}: ${0}
	});
snippet scu
	shouldComponentUpdate: function(nextProps, nextState) {
		${0}
	},
snippet vpns
	var props = this.props,
			state = this.state;${0}
snippet props
	this.props.${0}
snippet state
	this.state.${0}
snippet trp
	transferPropsTo(${0});
snippet pns
	var state = this.state,
			props = this.props;$0
